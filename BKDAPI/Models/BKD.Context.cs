//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BKDAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BKDHEntities : DbContext
    {
        public BKDHEntities()
            : base("name=BKDHEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Inv_M_UserMaster> Inv_M_UserMaster { get; set; }
        public virtual DbSet<M_ProductMaster> M_ProductMaster { get; set; }
        public virtual DbSet<M_GroupMaster> M_GroupMaster { get; set; }
        public virtual DbSet<M_LedgerMaster> M_LedgerMaster { get; set; }
        public virtual DbSet<trnFoodOrderDetail> trnFoodOrderDetails { get; set; }
        public virtual DbSet<trnFoodOrderMain> trnFoodOrderMains { get; set; }
        public virtual DbSet<trnFoodCart> trnFoodCarts { get; set; }
        public virtual DbSet<Im_CurrentStock> Im_CurrentStock { get; set; }
        public virtual DbSet<V_CurrentStockDetailNotForStockist> V_CurrentStockDetailNotForStockist { get; set; }
    
        public virtual ObjectResult<StockDetail_Result> StockDetail(string stall, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var stallParameter = stall != null ?
                new ObjectParameter("Stall", stall) :
                new ObjectParameter("Stall", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockDetail_Result>("StockDetail", stallParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<StockDetailnew_Result> StockDetailnew(string stall, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var stallParameter = stall != null ?
                new ObjectParameter("Stall", stall) :
                new ObjectParameter("Stall", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockDetailnew_Result>("StockDetailnew", stallParameter, fromDateParameter, toDateParameter);
        }
    }
}
